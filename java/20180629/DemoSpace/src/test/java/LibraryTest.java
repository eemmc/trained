
/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import static org.junit.Assert.assertTrue;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.nio.ByteBuffer;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.LinkedList;

import org.junit.Test;

import zz.yy.xx.color.ColorUtils;
import zz.yy.xx.text.StringUtils;

public class LibraryTest {
	@Test
	public void testSomeLibraryMethod() {
		Library classUnderTest = new Library();
		assertTrue("someLibraryMethod should return 'true'", classUnderTest.someLibraryMethod());
	}

	@Test
	public void demo01() {

		byte[] head = new byte[4];

		ByteBuffer.wrap(head).putInt(2048032);

		System.err.println(Arrays.toString(head));

		ByteBuffer.wrap(head).putInt(2048);

		System.err.println(Arrays.toString(head));
	}

	@Test
	public void demo03() {
		LinkedList<Long> linked = new LinkedList<>();
		linked.add(32L);
		linked.add(16L);
		linked.add(72L);

		System.err.println(linked);

		Collections.sort(linked, new Comparator<Long>() {
			@Override
			public int compare(Long f1, Long f2) {
				return Long.compare(f1, f2);
			}
		});

		System.err.println(linked);
	}

	@Test
	public void demo04() throws IOException {

		ByteBuffer buffer = ByteBuffer.allocateDirect(64);

		buffer.put("Hello NIO.".getBytes("UTF-8"));
		buffer.put("ByteBuffer decorypt.".getBytes("UTF-8"));
		buffer.flip().limit(24).rewind();
		byte[] swap = new byte[24];
		buffer.get(swap, 0, 24);
		System.err.println(new String(swap));

	}

	
}
